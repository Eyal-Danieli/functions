kind: serving
metadata:
  name: sentiment-analysis-serving
  tag: ''
  hash: a766072fed944d90cc3e041c5ba5833a1126f519
  project: ''
  labels:
    author: avia
    framework: pytorch
  categories:
  - model-serving
  - machine-learning
spec:
  command: ''
  args: []
  image: mlrun/ml-models
  build:
    commands:
    - python -m pip install transformers==3.0.2
    code_origin: https://aviaIguazio@github.com/aviaIguazio/functions.git#a2fab24aff04168b07305b0a91405b0f52b28399:/Users/aviasulin/PycharmProjects/mlrun/functions/sentiment_analysis_serving/sentiment_analysis_serving.py
    origin_filename: /Users/aviasulin/PycharmProjects/mlrun/functions/sentiment_analysis_serving/sentiment_analysis_serving.py
  description: BERT based sentiment classification model
  default_handler: handler
  disable_auto_mount: false
  env: []
  priority_class_name: ''
  preemption_mode: prevent
  min_replicas: 1
  max_replicas: 4
  base_spec:
    apiVersion: nuclio.io/v1
    kind: Function
    metadata:
      name: sentiment-analysis-serving
      labels: {}
      annotations:
        nuclio.io/generated_by: function generated from /Users/aviasulin/PycharmProjects/mlrun/functions/sentiment_analysis_serving/sentiment_analysis_serving.py
    spec:
      runtime: python
      handler: sentiment_analysis_serving:handler
      env: []
      volumes: []
      build:
        commands: []
        noBaseImagesPull: true
        functionSourceCode: aW1wb3J0IHRvcmNoCmltcG9ydCB0b3JjaC5ubiBhcyBubgpmcm9tIHRyYW5zZm9ybWVycyBpbXBvcnQgQmVydE1vZGVsLCBCZXJ0VG9rZW5pemVyCmltcG9ydCBtbHJ1bgpmcm9tIG1scnVuLnJ1bnRpbWVzIGltcG9ydCBudWNsaW9faW5pdF9ob29rCgpQUkVUUkFJTkVEX01PREVMID0gJ2JlcnQtYmFzZS1jYXNlZCcKdG9rZW5pemVyID0gQmVydFRva2VuaXplci5mcm9tX3ByZXRyYWluZWQoJ2JlcnQtYmFzZS1jYXNlZCcpCgoKY2xhc3MgQmVydFNlbnRpbWVudENsYXNzaWZpZXIobm4uTW9kdWxlKToKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBuX2NsYXNzZXMpOgogICAgICAgIHN1cGVyKEJlcnRTZW50aW1lbnRDbGFzc2lmaWVyLCBzZWxmKS5fX2luaXRfXygpCiAgICAgICAgc2VsZi5iZXJ0ID0gQmVydE1vZGVsLmZyb21fcHJldHJhaW5lZChQUkVUUkFJTkVEX01PREVMKQogICAgICAgIHNlbGYuZHJvcG91dCA9IG5uLkRyb3BvdXQocD0wLjIpCiAgICAgICAgc2VsZi5vdXRfbGluZWFyID0gbm4uTGluZWFyKHNlbGYuYmVydC5jb25maWcuaGlkZGVuX3NpemUsIG5fY2xhc3NlcykKICAgICAgICBzZWxmLnNvZnRtYXggPSBubi5Tb2Z0bWF4KGRpbT0xKQoKICAgIGRlZiBmb3J3YXJkKHNlbGYsIGlucHV0X2lkcywgYXR0ZW50aW9uX21hc2spOgogICAgICAgIF8sIHBvb2xlZF9vdXQgPSBzZWxmLmJlcnQoCiAgICAgICAgICAgIGlucHV0X2lkcz1pbnB1dF9pZHMsCiAgICAgICAgICAgIGF0dGVudGlvbl9tYXNrPWF0dGVudGlvbl9tYXNrCiAgICAgICAgKQogICAgICAgIG91dCA9IHNlbGYuZHJvcG91dChwb29sZWRfb3V0KQogICAgICAgIG91dCA9IHNlbGYub3V0X2xpbmVhcihvdXQpCiAgICAgICAgcmV0dXJuIHNlbGYuc29mdG1heChvdXQpCgoKY2xhc3MgU2VudGltZW50Q2xhc3NpZmllclNlcnZpbmcobWxydW4uc2VydmluZy5WMk1vZGVsU2VydmVyKToKICAgIGRlZiBsb2FkKHNlbGYpOgogICAgICAgICIiIgogICAgICAgIGxvYWQgYmVydCBtb2RlbCBpbnRvIGNsYXNzCiAgICAgICAgIiIiCiAgICAgICAgbW9kZWxfZmlsZSwgXyA9IHNlbGYuZ2V0X21vZGVsKCcucHQnKQogICAgICAgIGRldmljZSA9IHRvcmNoLmRldmljZSgnY3VkYTowJykgaWYgdG9yY2guY3VkYS5pc19hdmFpbGFibGUoKSBlbHNlIHRvcmNoLmRldmljZSgnY3B1JykKICAgICAgICBtb2RlbCA9IEJlcnRTZW50aW1lbnRDbGFzc2lmaWVyKG5fY2xhc3Nlcz0zKQogICAgICAgIG1vZGVsLmxvYWRfc3RhdGVfZGljdCh0b3JjaC5sb2FkKG1vZGVsX2ZpbGUsIG1hcF9sb2NhdGlvbj1kZXZpY2UpKQogICAgICAgIG1vZGVsLmV2YWwoKQogICAgICAgIHNlbGYubW9kZWwgPSBtb2RlbAoKICAgIGRlZiBwcmVkaWN0KHNlbGYsIGJvZHkpOgogICAgICAgICIiIgogICAgICAgIHByZWRpY3QgZnVuY3Rpb24KICAgICAgICA6cGFyYW0gYm9keTogc2V0IG9mIGlucHV0cyBmb3IgYmVydCBtb2RlbCB0byBwcmVkaWN0IGZyb20KICAgICAgICAiIiIKICAgICAgICB0cnk6CiAgICAgICAgICAgIG1ldGFfZGF0YSA9IGJvZHlbJ21ldGFfZGF0YSddCiAgICAgICAgICAgIGluc3RhbmNlcyA9IGJvZHlbJ2lucHV0cyddCiAgICAgICAgICAgIGVuYyA9IHRva2VuaXplci5iYXRjaF9lbmNvZGVfcGx1cyhpbnN0YW5jZXMsIHJldHVybl90ZW5zb3JzPSdwdCcsIHBhZF90b19tYXhfbGVuZ3RoPVRydWUpCiAgICAgICAgICAgIG91dHB1dHMgPSBzZWxmLm1vZGVsKGlucHV0X2lkcz1lbmNbJ2lucHV0X2lkcyddLCBhdHRlbnRpb25fbWFzaz1lbmNbJ2F0dGVudGlvbl9tYXNrJ10pCiAgICAgICAgICAgIF8sIHByZWRpY3RzID0gdG9yY2gubWF4KG91dHB1dHMsIGRpbT0xKQogICAgICAgICAgICBwcmVkaWN0aW9uX3JldHVybiA9IHByZWRpY3RzLmNwdSgpLnRvbGlzdCgpCiAgICAgICAgICAgIGlmIGxlbihtZXRhX2RhdGEpOgogICAgICAgICAgICAgICAgcHJlZGljdGlvbl9yZXR1cm4gPSBtZXRhX2RhdGEgKyBwcmVkaWN0cy5jcHUoKS50b2xpc3QoKQogICAgICAgICAgICByZXR1cm4gcHJlZGljdGlvbl9yZXR1cm4KICAgICAgICBleGNlcHQgRXhjZXB0aW9uIGFzIGU6CiAgICAgICAgICAgIHJhaXNlIEV4Y2VwdGlvbigiRmFpbGVkIHRvIHByZWRpY3QgJXMiICUgZSkKCgpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICByZXR1cm4gY29udGV4dC5tbHJ1bl9oYW5kbGVyKGNvbnRleHQsIGV2ZW50KQoKZnJvbSBtbHJ1bi5ydW50aW1lcyBpbXBvcnQgbnVjbGlvX2luaXRfaG9vawpkZWYgaW5pdF9jb250ZXh0KGNvbnRleHQpOgogICAgbnVjbGlvX2luaXRfaG9vayhjb250ZXh0LCBnbG9iYWxzKCksICdzZXJ2aW5nX3YyJykKCmRlZiBoYW5kbGVyKGNvbnRleHQsIGV2ZW50KToKICAgIHJldHVybiBjb250ZXh0Lm1scnVuX2hhbmRsZXIoY29udGV4dCwgZXZlbnQpCg==
  source: ''
  function_kind: serving_v2
  secret_sources: []
  affinity: null
  tolerations: null
verbose: false
