verbose: false
spec:
  description: Open a file/object archive into a target directory
  default_handler: open_archive
  build:
    origin_filename: ''
    code_origin: ''
    functionSourceCode: IyBDb3B5cmlnaHQgMjAyNSBJZ3VhemlvCiMKIyBMaWNlbnNlZCB1bmRlciB0aGUgQXBhY2hlIExpY2Vuc2UsIFZlcnNpb24gMi4wICh0aGUgIkxpY2Vuc2UiKTsKIyB5b3UgbWF5IG5vdCB1c2UgdGhpcyBmaWxlIGV4Y2VwdCBpbiBjb21wbGlhbmNlIHdpdGggdGhlIExpY2Vuc2UuCiMgWW91IG1heSBvYnRhaW4gYSBjb3B5IG9mIHRoZSBMaWNlbnNlIGF0CiMKIyAgICAgaHR0cDovL3d3dy5hcGFjaGUub3JnL2xpY2Vuc2VzL0xJQ0VOU0UtMi4wCiMKIyBVbmxlc3MgcmVxdWlyZWQgYnkgYXBwbGljYWJsZSBsYXcgb3IgYWdyZWVkIHRvIGluIHdyaXRpbmcsIHNvZnR3YXJlCiMgZGlzdHJpYnV0ZWQgdW5kZXIgdGhlIExpY2Vuc2UgaXMgZGlzdHJpYnV0ZWQgb24gYW4gIkFTIElTIiBCQVNJUywKIyBXSVRIT1VUIFdBUlJBTlRJRVMgT1IgQ09ORElUSU9OUyBPRiBBTlkgS0lORCwgZWl0aGVyIGV4cHJlc3Mgb3IgaW1wbGllZC4KIyBTZWUgdGhlIExpY2Vuc2UgZm9yIHRoZSBzcGVjaWZpYyBsYW5ndWFnZSBnb3Zlcm5pbmcgcGVybWlzc2lvbnMgYW5kCiMgbGltaXRhdGlvbnMgdW5kZXIgdGhlIExpY2Vuc2UuCiMKCmltcG9ydCBvcwppbXBvcnQgemlwZmlsZQppbXBvcnQgdGFyZmlsZQoKZnJvbSBtbHJ1bi5leGVjdXRpb24gaW1wb3J0IE1MQ2xpZW50Q3R4CmZyb20gbWxydW4uZGF0YXN0b3JlIGltcG9ydCBEYXRhSXRlbQpmcm9tIG1scnVuLmFydGlmYWN0cy5iYXNlIGltcG9ydCBEaXJBcnRpZmFjdAoKaW1wb3J0IGJvdG8zCmZyb20gdXJsbGliLnBhcnNlIGltcG9ydCB1cmxwYXJzZQoKZGVmIG9wZW5fYXJjaGl2ZSgKICAgIGNvbnRleHQ6IE1MQ2xpZW50Q3R4LAogICAgYXJjaGl2ZV91cmw6IERhdGFJdGVtLAogICAgc3ViZGlyOiBzdHIgPSAiY29udGVudC8iLAogICAga2V5OiBzdHIgPSAiY29udGVudCIsCiAgICB0YXJnZXRfcGF0aDogc3RyID0gTm9uZSwKKToKICAgICIiIk9wZW4gYSBmaWxlL29iamVjdCBhcmNoaXZlIGludG8gYSB0YXJnZXQgZGlyZWN0b3J5LiBDdXJyZW50bHksIHN1cHBvcnRzIHppcCBhbmQgdGFyLmd6LgoKICAgIDpwYXJhbSBjb250ZXh0OiAgICAgIGZ1bmN0aW9uIGV4ZWN1dGlvbiBjb250ZXh0CiAgICA6cGFyYW0gYXJjaGl2ZV91cmw6ICB1cmwgb2YgYXJjaGl2ZSBmaWxlIAogICAgOnBhcmFtIHN1YmRpcjogICAgICAgcGF0aCB3aXRoaW4gYXJ0aWZhY3Qgc3RvcmUgd2hlcmUgZXh0cmFjdGVkIGZpbGVzIGFyZSBzdG9yZWQsIGRlZmF1bHQgaXMgIi9jb250ZW50IgogICAgOnBhcmFtIGtleTogICAgICAgICAga2V5IG9mIGFyY2hpdmUgY29udGVudHMgaW4gYXJ0aWZhY3Qgc3RvcmUKICAgIDpwYXJhbSB0YXJnZXRfcGF0aDogIGZpbGUgc3lzdGVtIHBhdGggdG8gc3RvcmUgZXh0cmFjdGVkIGZpbGVzCiAgICAiIiIKCiAgICAjIFJlc29sdmVzIHRoZSBhcmNoaXZlIGxvY2FsbHkKICAgIGFyY2hpdmVfdXJsID0gYXJjaGl2ZV91cmwubG9jYWwoKQogICAgdjNpb19zdWJkaXIgPSBOb25lCiAgICAjIFdoZW4gY3VzdG9tIGFydGlmYWN0IHBhdGggaXMgZGVmaW5lZAogICAgaWYgbm90IHRhcmdldF9wYXRoIGFuZCBjb250ZXh0LmFydGlmYWN0X3BhdGg6CiAgICAgICAgcGFyc2VkX3N1YmRpciA9IHVybHBhcnNlKGNvbnRleHQuYXJ0aWZhY3RfcGF0aCkKICAgICAgICBpZiBwYXJzZWRfc3ViZGlyLnNjaGVtZSA9PSAnczMnOgogICAgICAgICAgICBzdWJkaXIgPSBvcy5wYXRoLmpvaW4oY29udGV4dC5hcnRpZmFjdF9wYXRoLCBzdWJkaXIpCiAgICAgICAgZWxpZiBwYXJzZWRfc3ViZGlyLnNjaGVtZSA9PSAndjNpbyc6CiAgICAgICAgICAgIHYzaW9fc3ViZGlyID0gb3MucGF0aC5qb2luKGNvbnRleHQuYXJ0aWZhY3RfcGF0aCwgc3ViZGlyKSAjIFVzaW5nIHYzaW9fc3ViZGlyIGZvciBsb2dnaW5nCiAgICAgICAgICAgIHN1YmRpciA9ICcvdjNpbycgKyBwYXJzZWRfc3ViZGlyLnBhdGggKyAnLycgKyBzdWJkaXIKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ1VzaW5nIHYzaW8gc2NoZW1lLCBleHRyYWN0aW5nIHRvIHtzdWJkaXJ9JykKICAgICAgICBlbHNlOgogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnVW5yZWNvZ25pemFibGUgc2NoZW1lLCBleHRyYWN0aW5nIHRvIHtzdWJkaXJ9JykKICAgICAgICAgICAgCiAgICAjIFdoZW4gd29ya2luZyBvbiBDRSwgdGFyZ2V0IHBhdGggbWlnaHQgYmUgb24gczMKICAgIGlmICdzMycgaW4gKHRhcmdldF9wYXRoIG9yIHN1YmRpcik6CiAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ1VzaW5nIHMzIHNjaGVtZSwgZXh0cmFjdGluZyB0byB7dGFyZ2V0X3BhdGggb3Igc3ViZGlyfScpCiAgICAgICAgaWYgb3MuZW52aXJvbi5nZXQoJ1MzX0VORFBPSU5UX1VSTCcpOgogICAgICAgICAgICBjbGllbnQgPSBib3RvMy5jbGllbnQoJ3MzJywgZW5kcG9pbnRfdXJsID0gb3MuZW52aXJvbi5nZXQoJ1MzX0VORFBPSU5UX1VSTCcpKSAKICAgICAgICBlbHNlOgogICAgICAgICAgICBjbGllbnQgPSBib3RvMy5jbGllbnQoJ3MzJykgIAogICAgICAgICAgICAKICAgICAgICBpZiBhcmNoaXZlX3VybC5lbmRzd2l0aCgiZ3oiKToKICAgICAgICAgICAgd2l0aCB0YXJmaWxlLm9wZW4oYXJjaGl2ZV91cmwsIG1vZGU9InJ8Z3oiKSBhcyByZWY6CiAgICAgICAgICAgICAgICBmb3IgbWVtYmVyIGluIHJlZi5nZXRtZW1iZXJzKCk6CiAgICAgICAgICAgICAgICAgICAgZGF0YT1yZWYuZXh0cmFjdGZpbGUobWVtYmVyPW1lbWJlcikucmVhZCgpCiAgICAgICAgICAgICAgICAgICAgY2xpZW50LnB1dF9vYmplY3QoQm9keT1kYXRhLCBCdWNrZXQ9dXJscGFyc2UodGFyZ2V0X3BhdGggb3Igc3ViZGlyKS5uZXRsb2MsIEtleT1mJ3t1cmxwYXJzZSh0YXJnZXRfcGF0aCBvciBzdWJkaXIpLnBhdGhbMTpdfXttZW1iZXIubmFtZX0nKQoKICAgICAgICBlbGlmIGFyY2hpdmVfdXJsLmVuZHN3aXRoKCJ6aXAiKToKICAgICAgICAgICAgd2l0aCB6aXBmaWxlLlppcEZpbGUoYXJjaGl2ZV91cmwsICJyIikgYXMgcmVmOgogICAgICAgICAgICAgICAgZm9yIGZpbGVuYW1lIGluIHJlZi5uYW1lbGlzdCgpOgogICAgICAgICAgICAgICAgICAgIGRhdGE9cmVmLnJlYWQoZmlsZW5hbWUpCiAgICAgICAgICAgICAgICAgICAgY2xpZW50LnB1dF9vYmplY3QoQm9keT1kYXRhLCBCdWNrZXQ9dXJscGFyc2UodGFyZ2V0X3BhdGggb3Igc3ViZGlyKS5uZXRsb2MsIEtleT1mJ3t1cmxwYXJzZSh0YXJnZXRfcGF0aCBvciBzdWJkaXIpLnBhdGhbMTpdfXtmaWxlbmFtZX0nKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoZiJ1bnN1cHBvcnRlZCBhcmNoaXZlIHR5cGUgaW4ge2FyY2hpdmVfdXJsfSIpCiAgICAKICAgIGVsc2U6CiAgICAgICAgb3MubWFrZWRpcnModGFyZ2V0X3BhdGggb3Igc3ViZGlyLCBleGlzdF9vaz1UcnVlKQogICAgICAgIGlmIGFyY2hpdmVfdXJsLmVuZHN3aXRoKCJneiIpOgogICAgICAgICAgICB3aXRoIHRhcmZpbGUub3BlbihhcmNoaXZlX3VybCwgbW9kZT0icjpneiIpIGFzIHJlZjoKICAgICAgICAgICAgICAgICMgVmFsaWRhdGUgdGhhdCB0aGVyZSBpcyBubyBwYXRoIHRyYXZlcnNhbCBpbiB0aGUgYXJjaGl2ZQogICAgICAgICAgICAgICAgZm9yIGVudHJ5IGluIHJlZi5nZXRtZW1iZXJzKCk6CiAgICAgICAgICAgICAgICAgICAgaWYgb3MucGF0aC5pc2FicyhlbnRyeS5uYW1lKSBvciAiLi4iIGluIGVudHJ5Lm5hbWU6CiAgICAgICAgICAgICAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoZiJJbGxlZ2FsIHRhciBhcmNoaXZlIGVudHJ5OiB7ZW50cnkubmFtZX0iKQogICAgICAgICAgICAgICAgcmVmLmV4dHJhY3RhbGwodGFyZ2V0X3BhdGggb3Igc3ViZGlyKQogICAgICAgIGVsaWYgYXJjaGl2ZV91cmwuZW5kc3dpdGgoInppcCIpOgogICAgICAgICAgICB3aXRoIHppcGZpbGUuWmlwRmlsZShhcmNoaXZlX3VybCwgInIiKSBhcyByZWY6CiAgICAgICAgICAgICAgICAjIFZhbGlkYXRlIHRoYXQgdGhlcmUgaXMgbm8gcGF0aCB0cmF2ZXJzYWwgaW4gdGhlIGFyY2hpdmUKICAgICAgICAgICAgICAgIGZvciBlbnRyeSBpbiByZWYubmFtZWxpc3QoKToKICAgICAgICAgICAgICAgICAgICBpZiBvcy5wYXRoLmlzYWJzKGVudHJ5KSBvciAiLi4iIGluIGVudHJ5OgogICAgICAgICAgICAgICAgICAgICAgICByYWlzZSBWYWx1ZUVycm9yKGYiSWxsZWdhbCB6aXAgYXJjaGl2ZSBlbnRyeToge2VudHJ5fSIpCiAgICAgICAgICAgICAgICByZWYuZXh0cmFjdGFsbCh0YXJnZXRfcGF0aCBvciBzdWJkaXIpCiAgICAgICAgZWxzZToKICAgICAgICAgICAgcmFpc2UgVmFsdWVFcnJvcihmInVuc3VwcG9ydGVkIGFyY2hpdmUgdHlwZSBpbiB7YXJjaGl2ZV91cmx9IikKICAgICAgICAgICAgCiAgICBpZiB2M2lvX3N1YmRpcjoKICAgICAgICBzdWJkaXIgPSB2M2lvX3N1YmRpcgogICAgICAgIAogICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0xvZ2dpbmcgYXJ0aWZhY3QgdG8geyh0YXJnZXRfcGF0aCBvciBzdWJkaXIpfScpCiAgICBjb250ZXh0LmxvZ19hcnRpZmFjdChEaXJBcnRpZmFjdChrZXk9a2V5LCB0YXJnZXRfcGF0aD0odGFyZ2V0X3BhdGggb3Igc3ViZGlyKSkp
  entry_points:
    open_archive:
      lineno: 27
      has_varargs: false
      doc: Open a file/object archive into a target directory. Currently, supports
        zip and tar.gz.
      name: open_archive
      has_kwargs: false
      parameters:
      - name: context
        type: MLClientCtx
        doc: function execution context
      - name: archive_url
        type: DataItem
        doc: 'url of archive file '
      - name: subdir
        type: str
        doc: path within artifact store where extracted files are stored, default
          is "/content"
        default: content/
      - name: key
        type: str
        doc: key of archive contents in artifact store
        default: content
      - name: target_path
        type: str
        doc: file system path to store extracted files
        default: null
  image: mlrun/mlrun
  command: ''
  disable_auto_mount: false
metadata:
  categories:
  - data-preparation
  tag: ''
  name: open-archive
kind: job
